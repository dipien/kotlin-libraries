version = "3.0.0"

ext.GITHUB_REPOSITORY_NAME = "jdroid-java"
ext.RELEASES_HUB_GRADLE_PLUGIN_ENABLED = true

apply plugin: "com.jdroidtools.root"
apply plugin: "com.jdroidtools.component.builder"

buildscript {
	repositories {
		jcenter {
			mavenContent {
				releasesOnly()
			}
		}
		String localMavenRepoEnabled = project.hasProperty('LOCAL_MAVEN_REPO_ENABLED') ? project.ext.get('LOCAL_MAVEN_REPO_ENABLED') : System.getenv('LOCAL_MAVEN_REPO_ENABLED')
		boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
		if (isLocalMavenRepoEnabled) {
			String localMavenRepo = project.hasProperty('LOCAL_MAVEN_REPO') ? project.ext.get('LOCAL_MAVEN_REPO') : System.getenv('LOCAL_MAVEN_REPO')
			if (localMavenRepo != null) {
				maven {
					url = localMavenRepo
					content {
						includeGroup("com.jdroidtools")
					}
				}
			}
		}
		maven {
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
			content {
				includeGroup("com.jdroidtools")
			}
			mavenContent {
				snapshotsOnly()
			}
		}
		maven {
			url = "https://plugins.gradle.org/m2/"
			content {
				excludeGroup("com.jdroidtools")
			}
			mavenContent {
				releasesOnly()
			}
		}
	}
	apply from: "$rootDir/build_dependencies.gradle"
	dependencies {
		classpath(libs.jdroid_component_builder)
		classpath(libs.jdroid_gradle_root_plugin)
	}
}

subprojects {

	buildscript {
		repositories {
			jcenter {
				mavenContent {
					releasesOnly()
				}
			}
			String localMavenRepoEnabled = project.hasProperty('LOCAL_MAVEN_REPO_ENABLED') ? project.ext.get('LOCAL_MAVEN_REPO_ENABLED') : System.getenv('LOCAL_MAVEN_REPO_ENABLED')
			boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
			if (isLocalMavenRepoEnabled) {
				String localMavenRepo = project.hasProperty('LOCAL_MAVEN_REPO') ? project.ext.get('LOCAL_MAVEN_REPO') : System.getenv('LOCAL_MAVEN_REPO')
				if (localMavenRepo != null) {
					maven {
						url = localMavenRepo
						content {
							includeGroup("com.jdroidtools")
						}
					}
				}
			}
			maven {
				url = "https://oss.sonatype.org/content/repositories/snapshots/"
				content {
					includeGroup("com.jdroidtools")
				}
				mavenContent {
					snapshotsOnly()
				}
			}
		}
	}

	repositories {
		jcenter {
			mavenContent {
				releasesOnly()
			}
		}
		String localMavenRepo = project.hasProperty("LOCAL_MAVEN_REPO") ? project.ext.get("LOCAL_MAVEN_REPO") : System.getenv("LOCAL_MAVEN_REPO")
		if (localMavenRepo != null) {
			maven {
				url = localMavenRepo
				content {
					includeGroup("com.jdroidtools")
				}
			}
		}
		maven {
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
			content {
				includeGroup("com.jdroidtools")
			}
			mavenContent {
				snapshotsOnly()
			}
		}
	}
}
